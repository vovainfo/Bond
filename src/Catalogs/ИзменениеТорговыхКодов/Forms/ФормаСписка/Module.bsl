//#Область ОбработчикиСобытийФормы
//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовШапкиФормы
//#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>
//#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ЗагрузитьС_MOEX(Команда)
	ЗагрузитьС_MOEXНаСервере();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗагрузитьС_MOEXНаСервере()
	URL = "https://iss.moex.com//iss/history/engines/stock/markets/shares/securities/changeover.json";

	ДопПараметры = КлиентHTTPКлиентСервер.НовыеДополнительныеПараметры();
	//@skip-check bsl-legacy-check-returning-type-for-environment
	Ответ = КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДопПараметры).Получить(URL, , ДопПараметры);
	
	Если Ответ.КодСостояния <> 200 Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						        	НСтр("ru='Ошибка получения данных с биржи. Код ответа <%1>'"),
						        	Ответ.КодСостояния);
		#Если Сервер Тогда
		ОбщегоНазначения.СообщитьПользователю(ТекстПредупреждения);		
		#КонецЕсли						        	
		Возврат;		
	КонецЕсли;
	
	DataMOEX = Ответ.Тело.changeover.data;
	ТЗ_MOEX = Новый ТаблицаЗначений();
	ТЗ_MOEX.Колонки.Добавить("action_date", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТЗ_MOEX.Колонки.Добавить("old_secid", ОбщегоНазначения.ОписаниеТипаСтрока(36));
	ТЗ_MOEX.Колонки.Добавить("new_secid", ОбщегоНазначения.ОписаниеТипаСтрока(36));
	
	Для Каждого стр Из DataMOEX Цикл
		НоваяСтрока = ТЗ_MOEX.Добавить();
		НоваяСтрока.action_date = ПрочитатьДатуJSON(стр[0], ФорматДатыJSON.ISO);
		НоваяСтрока.old_secid = стр[1];
		НоваяСтрока.new_secid = стр[2];
	КонецЦикла;

	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеMOEX.action_date КАК action_date,
		|	ДанныеMOEX.old_secid КАК old_secid,
		|	ДанныеMOEX.new_secid КАК new_secid
		|ПОМЕСТИТЬ ВТ_ДанныеMOEX
		|ИЗ
		|	&ДанныеMOEX КАК ДанныеMOEX
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеMOEX.action_date,
		|	ВТ_ДанныеMOEX.old_secid,
		|	ВТ_ДанныеMOEX.new_secid
		|ИЗ
		|	ВТ_ДанныеMOEX КАК ВТ_ДанныеMOEX
		|ГДЕ
		|	(ВТ_ДанныеMOEX.old_secid, ВТ_ДанныеMOEX.new_secid) НЕ В
		|		(ВЫБРАТЬ
		|			ИТК.old_secid,
		|			ИТК.new_secid
		|		ИЗ
		|			СПРАВОЧНИК.ИзменениеТорговыхКодов КАК ИТК
		|		ГДЕ
		|			НЕ ИТК.ПометкаУдаления)";
		
	Запрос.Параметры.Вставить("ДанныеMOEX", ТЗ_MOEX);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Обновления справочника отсутствуют'"));
		Возврат;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		ЭлементСправочника = Справочники.ИзменениеТорговыхКодов.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(ЭлементСправочника, Выборка);
		ЭлементСправочника.Наименование = СтрШаблон("%1 -> %2", Выборка.old_secid, Выборка.new_secid);
		ЭлементСправочника.Записать();
		СтрСообщение = СтрШаблон(НСтр("ru = '(Код=%1) %2 %3'"), ЭлементСправочника.Код, 
							Формат(ЭлементСправочника.action_date, "ДЛФ=D;"), ЭлементСправочника.Наименование);
		ОбщегоНазначения.СообщитьПользователю(СтрСообщение);
	КонецЦикла;
	СтрСообщение = СтрШаблон(НСтр("ru = 'Число загруженных записей: %1'"), Выборка.Количество());
	ОбщегоНазначения.СообщитьПользователю(СтрСообщение);
	Элементы.Список.Обновить();	
КонецПроцедуры
#КонецОбласти
