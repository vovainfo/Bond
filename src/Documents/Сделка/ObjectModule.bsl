#Область ОбработчикиСобытий
//@skip-check module-accessibility-at-client
Процедура ОбработкаПроведения(Отказ,Режим)
	Если ТипСделки = Перечисления.ТипСделки.Покупка Тогда
		Движения.Комиссии.Записывать = Истина;
		Движение = Движения.Комиссии.Добавить();
		Движение.Период = Дата;
		Движение.Тикер = Тикер;
		Движение.Комиссия = Комиссия;
	
		// регистр Акции
		Движения.Акции.Записывать = Истина;
		Движение = Движения.Акции.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Портфель = Портфель;
		Движение.Тикер = Тикер;
		Движение.Количество = Количество;
		Движение.Сумма = Сумма;
		Движение.Комиссия = Комиссия;
		Движение.СуммаПолная = СуммаПолная;
	ИначеЕсли ТипСделки = Перечисления.ТипСделки.Продажа Тогда
		// регистр Акции
		// есть Сумма - фактически себестоимость по среднему. поэтому новая методика не подходит.
		Движения.Акции.Записывать = Истина;
		Движения.Записать();

		Движения.Акции.Записывать = Истина;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Акции");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Портфель", Портфель);
		ЭлементБлокировки.УстановитьЗначение("Тикер", Тикер);
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	АкцииОстатки.Портфель,
			|	АкцииОстатки.Портфель.Наименование КАК ПортфельНаименование,
			|	АкцииОстатки.Тикер,
			|	АкцииОстатки.Тикер.Наименование КАК ТикерНаименование,
			|	АкцииОстатки.КоличествоОстаток,
			|	АкцииОстатки.СуммаОстаток,
			|	АкцииОстатки.КомиссияОстаток,
			|	АкцииОстатки.СуммаПолнаяОстаток
			|ИЗ
			|	РегистрНакопления.Акции.Остатки(&МоментВремени, Портфель = &Портфель
			|	И Тикер = &Тикер) КАК АкцииОстатки";
		
		Запрос.УстановитьПараметр("Тикер", Тикер);
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("Портфель", Портфель);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если НЕ Выборка.Следующий() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(НСтр("ru = 'Нет тикера %1 в портфеле %2'"), Тикер, Портфель);
			Сообщение.Сообщить();	
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если Выборка.КоличествоОстаток < Количество Тогда
			Сообщение = Новый СообщениеПользователю;
			Шаблон = НСтр("ru = 'В портфеле %1 %2 акций %3, а надо %4'"); 
			Сообщение.Текст = СтрШаблон(Шаблон, Выборка.ПортфельНаименование, Выборка.КоличествоОстаток, Выборка.ТикерНаименование, Количество);
			Сообщение.Сообщить();	
			Отказ = Истина;
			Возврат;		
		КонецЕсли;
		
		Движения.Акции.Записывать = Истина;
		Движение = Движения.Акции.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Портфель = Портфель;
		Движение.Тикер = Тикер;
		Движение.Количество = Количество;

		Если Количество = Выборка.КоличествоОстаток Тогда // проблема копеек
			Движение.Сумма = Выборка.СуммаОстаток;
			Движение.Комиссия = Выборка.КомиссияОстаток;
			Движение.СуммаПолная = Выборка.СуммаПолнаяОстаток;
		Иначе
			Движение.Сумма = Выборка.СуммаОстаток / Выборка.КоличествоОстаток * Количество;
			Движение.Комиссия = Выборка.КомиссияОстаток / Выборка.КоличествоОстаток * Количество;
			Движение.СуммаПолная = Выборка.СуммаПолнаяОстаток / Выборка.КоличествоОстаток * Количество;
		КонецЕсли;
		СуммаПолнаяИзДвижения = Движение.СуммаПолная; // "себестоимость" проданных акций 
	
		// регистр Комиссии
		Движения.Комиссии.Записывать = Истина;
		Движение = Движения.Комиссии.Добавить();
		Движение.Период = Дата;
		Движение.Тикер = Тикер;
		Движение.Комиссия = Комиссия;
	
		// регистр Прибыль
		Движения.Прибыль.Записывать = Истина;
		Движение = Движения.Прибыль.Добавить();
		Движение.Период = Дата;
		Движение.Тикер = Тикер;
		Движение.Сумма = СуммаПолная - СуммаПолнаяИзДвижения;		 
	КонецЕсли;
КонецПроцедуры		
#КонецОбласти